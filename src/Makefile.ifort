.PHONY: all clean

FF=ifort
CC=icc
FOPTS=-Ofast -fpp -m64 -free -mkl -g -fpe3 -qopenmp -ipo -funroll-loops -xHost
COPTS=-Ofast -m64 -g -qopenmp -ipo -funroll-loops -xHost
SHTOOLS_LIB=
SHTOOLS_INCLUDE=
LD=$(SHTOOLS_LIB) -lSHTOOLS -lm -lmkl_intel_lp64 -lmkl_sequential -lmkl_core
INCLUDE=$(SHTOOLS_INCLUDE)
SAGPR_PREFIX=/usr/local

LODE=LODE/lebedev.o LODE/gausslegendre.o LODE/nearfield.o LODE/mod_lode.o
SOCK=SOCKETS/sockets.o SOCKETS/fsockets.o
OBJ4=$(LODE) mod_sagpr.o mod_apply.o
OBJ5=$(SOCK) mod_io.o sagpr_apply.o

all: mkbin libsoapfast sagpr_apply

#more: all sagpr_get_PS sagpr_get_kernel sagpr_predict

mkbin:
	@if [ ! -d ../bin ];then mkdir ../bin;fi
	@cd ../bin;if [ ! -f sagpr_convert ];then ln -s ../tools/sagpr_convert.py sagpr_convert;fi;cd - > /dev/null
	@cd ../bin;if [ ! -f lode_convert ];then ln -s ../tools/lode_convert.py lode_convert;fi;cd - > /dev/null
	@cd ../bin;if [ ! -f sagpr_split_frames ];then ln -s ../tools/sagpr_split_frames.py sagpr_split_frames;fi;cd - > /dev/null
	@cd ../bin;if [ ! -f sagpr_apply_process ];then ln -s ../tools/sagpr_apply_process.sh sagpr_apply_process;fi;cd - > /dev/null

libsoapfast: $(OBJ4)
	@if [ ! -d ../lib ];then mkdir ../lib;fi
	ar r ../lib/libsoapfast.a $(OBJ4)

sagpr_apply: $(OBJ5)
	$(FF) $(FOPTS) -o ../bin/sagpr_apply $(OBJ5) -L../lib -lsoapfast $(INCLUDE) $(LD)

SOCKETS/%.o: SOCKETS/%.c
	$(CC) $(COPTS) -c -o $@ $<

SOCKETS/%.o: SOCKETS/%.f90
	$(FF) $(FOPTS) $(SHTOOLS_INCLUDE) -c $< -o $@

LODE/%.o: LODE/%.f90
	$(FF) $(FOPTS) $(SHTOOLS_INCLUDE) -c $< -o $@

%.o: %.f90 
	$(FF) $(FOPTS) $(SHTOOLS_INCLUDE) -c $< 

%.o: %.f
	$(FF) $(FOPTS) -c $<

install: all
	@mkdir -p $(SAGPR_PREFIX)/{bin,lib}
	@cp ../bin/* $(SAGPR_PREFIX)/bin
	@cp ../lib/* $(SAGPR_PREFIX)/lib

check: all mkcheck

mkcheck:
	@cd ../tests/water_monomer_zeta2/;bash run_test.sh

config:
	@cd ../;./configure;cd src

clean: 
	rm -rf *.o *.mod */*.o */*.mod ../bin/* ../bin ../lib

distclean:
	rm -rf *.o *.mod */*.o */*.mod ../bin ../lib ../install
